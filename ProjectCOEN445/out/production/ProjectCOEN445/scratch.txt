Assumptions
************

- Date format = MM/DD/YYYY
- Can only book hour, since time slots are split per hour
- One client per computer


Input format for "CLIENT" sending messages
***********************************
- For REQUEST MESSAGE (rq_code date time min_part# part_list topic)
        1110 03/25/2019 15:30 2 12,13,14 welcome

- FOR ACCEPT MESSAGE (accept_code mt#)
        3330 /127.0.0.1-1

- FOR REJECT MESSAGE (reject_code mt#)
        3331 /127.0.0.1-1

- FOR CANCELII MESSAGE (cancel2_code mt#)
        6661 /127.0.0.1-1

- FOR WITHDRAWII MESSAGE (withdraw2_code mt#)
        7771 /127.0.0.1-1

- FOR ADD MESSAGE (add_code mt#)
        8880 /127.0.0.1-1


Input format for "SERVER" sending messages
***********************************
- FOR RESPONSE MESSAGE (resp_code rq#)

- FOR INVITE MESSAGE (inv_code date time topic requester)
        2222 03/25/2019 15:30 welcome /127.0.0.1


MESSAGES RECEIVED BY THE SERVER
*******************************
- Request
- Accept
- Reject
- CancelII
- WithdrawII
- Add


MESSAGES RECEIVED BY THE CLIENT | (*) = to the Organizer
********************************************************
- Response
- Invite
- Confirm(*)
- Scheduled(*)
- CancelI(*)
- Not_Scheduled(*)
- WithdrawI(*)
- Added(*)
- Room_Change (to everyone)


ROOM
****
- If the state is True, it means it is "free", otherwise "false".


Random
****
//    SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
//  Date date = formatter.parse(s1);

//DateFormat df = new SimpleDateFormat("HH:mm");
// java.sql.Time timeValue = new java.sql.Time(df.parse(s2).getTime());
//java.sql.Time sql2 = new java.sql.Time(timeValue.getTime());